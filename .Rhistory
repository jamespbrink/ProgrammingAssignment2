install.packages("slidify")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
class(numeric())
source('~/.active-rstudio-document')
makeVector
makeVector()
makeVector(x)
source('~/.active-rstudio-document')
cachemean(x)
cachemean(5)
mat <- matrix(c(1,2,3,4), rows=2, cols=2)
mat <- matrix(c(1,2,3,4), nrow=2, ncol=2)
mat
solve(mat)
source('~/.active-rstudio-document')
cachemean(makeVector)
x<-makeVector()
cachemean(x)
x$getmean()
x$setmean(1)
x$getmean()
cachemean(x)
x<-makeVector(5)
cachemean(x)
x<-makeVector(c(5,10))
cachemean(x)
cachemean(x)
x$get
x$get(5)
x<-makeVector(5)
x$get
x$set
xget()
x$get()
z <- makeMatrix(1:4,2,2)
source('~/.active-rstudio-document')
z <- makeMatrix(1:4,2,2)
z <- makeMatrix(matrix(1:4,2,2))
z$get()
x$get()
z$get()
cacheInverse(z)
cacheInverse(z)
source('~/R/ProgrammingAssignment2/cachematrix.R')
matrixone <- matrix(1:4,2,2)
matrixone
makeCacheMatrix(matrixone)
cool <- makeCacheMatrix(matrixone)
cacheSolve(cool)
cacheSolve(cool)
cacheSolve(makeCacheMatrix(matrixone))
cacheSolve(makeCacheMatrix(matrixone))
cacheSolve(x
cacheSolve(x)
cacheSolve(x)
matrixone$set(matrix(4:1,2,2))
matrixone$get
matrixone$get()
matrixtwo <- matrix(4:1,2,2)
matrixtwo
matrixthree <- makeCacheMatrix(matrixtwo)
matrixthree$get()
matrixthree$set(matrix(5:8,2,2))
matrixthree$get()
cacheSolve(matrixThree)
cacheSolve(matrixthree)
test$get()
matrixthree$get()
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x{-c(2, 10)}
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
source('~/.active-rstudio-document')
mtx <- matrix(1:4,2,2)
makeCacheMatix(mtx)
z <- makeCacheMatrix(mtx)
source('~/.active-rstudio-document')
z <- makeCacheMatrix(mtx)
cacheSolve(z)
cacheSolve(z)
mtx
z$set(matrix(4:1,2,2))
cacheSolve(z)
cacheSolve(z)
z
source('~/.active-rstudio-document')
z$set(matrix(4:1,2,2))
cacheSolve(z)
z <- makeCacheMatrix(matrix(4:7,2,2))
z
source('~/R/ProgrammingAssignment2/cachematrix.R')
z <- makeCacheMatrix(matrix(4:7,2,2))
z
source('~/R/ProgrammingAssignment2/cachematrix.R')
z <- makeCacheMatrix(matrix(4:7,2,2))
z
source('~/R/ProgrammingAssignment2/cachematrix.R')
z <- makeCacheMatrix(matrix(4:7,2,2))
z
z$set(matrix(4:1,2,2))
z
cacheSolve(z)
cacheSolve(z)
z$set(matrix(5:8,2,2))
cacheSolve(z)
cacheSolve(z)
library(swirl)
swirl()
my_vector(1:20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1:20,4,5)
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_daya)
class(my_data)
cnames <- c("patient", "age, "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "James")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
5 +7
x <- 5+7
x
y<- x-3
y
c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_aqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(1,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z * 2 + 1000
my_name
name
my_name
info()
my_name
my_char
name
my_sqrt
my_div
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5,10,length=30)
my_seq <-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=4-)
rep(0, times=40)
rep(c(0,1,2), times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
set.seed(1)
rpois(5, 2)
rbinom(10,10,0.5)
?rbinom
set.seed(10)
rbinom(10,10,0.5)
x <- rbinom(10,10,0.5)
e <- nnorm(10,0,20)
e <- rnorm(10,0,20)
y<- 0.5 + 2 * x + e
plot (x,y)
y
?rbinom
?format
?as.Date
data <- read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
?strsplit
list <- strsplit(names(data), "wgtp")
list
list[123]
data <- read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
head(data)
tail(data)
data <- data[5:330]
data <- data[5:330.]
data <- data[5:330,]
head(data)
data[190,]
data <- data[1:190,]
tail(data)
gsub(",", "", data$X.3)
newcol <- gsub(",", "", data$X.3)
class(newcol)
newcol <- gsub(" ", "", newcol)
newcol
newcol <- as.numeric(newcol)
mean(newcol)
names(data)
head(data)
countryNames <- data$X.2
countryNames
class(countryNames)
tail(data)
data$X.2
grep("^United", countryNames)
gsub("\","", countryNames)
countryNames <-gsub("\\", "", countryNames)
countryNames <-gsub("\\", "", countryNames)
countryNames <-gsub("\xe3", "", countryNames)
countryNames <-gsub("\xe9", "", countryNames)
countryNames <-gsub("\xf4", "", countryNames)
countryNames
class(countryNames)
grep("^United", countryNames)
data
dataGDP <- data
dataEDU <- read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
names(dataEDU)
?merge
mData <- merge(dataGDP, dataEDU, by.x = "X", by.y = "CountryCode")
head(mData)
nrow(mData)
names(mData)
names(dataGDP)
dataGDPraw <- read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
head(dataGDPraw)
head(mData)
mData$Special.Notes
?grepl
mData$Special.Notes[grepl("Fiscal", mData$Special.Notes)]
fy <- mData$Special.Notes[grepl("Fiscal", mData$Special.Notes)]
fyj <- fy[grepl("June", fy)]
fyj
length(fyj)
install.packages("quantmod")
library(quantmod)
amzn <- getSymbols("AMZN", auto.assign = FALSE)
sampleTimes <- index(amzn)
sampleTimes
class(sampleTimes)
year(sampleTimes[1927])
?year
?y
?date
sampleTimesy <- format(sampleTimes, "%Y")
sampleTimesy
class(sampleTimesy)
stL <- sampleTimesy == "2012"
head(stL)
stL[1297]
amzn2012 <- sampleTimes[stL]
head(amzn2012)
tail(amzn2012)
length(amzn2012)
amzn2012wd <- weekdays(amzn2012)
head(amzn2012wd)
amzn2012m <- amzn2012wd[amzn2012wd == "Monday"]
amzn2012m
lenght(amzn2012m)
length(amzn2012m)
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
par(mar=c(2,2,2,2))
plot(x,y)
par(mar=c(4,4,2,2))
plot(x,y)
plot(x,y, pch=19)
plot(x,y, pch=2)
plot(x,y, pch=4)
?pch
example(points)
plot(x, y, pch=20)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, pch=20)
title("my scatterplot")
text(-2,-2, "lable")
text(0,0, "label")
fit <- lm(y-x)
fit <- lm(y - x)
z <- rpois(100,2)
par(mfrow = c(2,1))
plot(x,y,pch=20)
plot(x,z,pch=19)
par(mar=2,2,1,1)
par(mar=c(2,2,1,1)
par(mar=c(2,2,1,1)0
par(mar=c(2,2,1,1))
plot(x,z,pch=19)
plot(x,y,pch=20)
?quartz
setwd("~/R/ProgrammingAssignment2")
m <- matrix(1:4,2,2)
source('~/R/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
source('~/R/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix
makeCacheMatrix()
source('~/R/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
makeCacheMatrix(matrix(1:4,2,2))
